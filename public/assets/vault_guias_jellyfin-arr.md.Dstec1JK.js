import{_ as a,c as n,o as e,ag as p}from"./chunks/framework.B-XtCDNB.js";const d=JSON.parse('{"title":"Jellyfin e Família Arr - Docker Compose","description":"","frontmatter":{},"headers":[],"relativePath":"vault/guias/jellyfin-arr.md","filePath":"vault/guias/jellyfin-arr.md","lastUpdated":1760372794000}'),r={name:"vault/guias/jellyfin-arr.md"};function l(i,s,o,c,t,m){return e(),n("div",null,[...s[0]||(s[0]=[p(`<h1 id="jellyfin-e-familia-arr-docker-compose" tabindex="-1"><a href="./vault/guias/jellyfin-arr">Jellyfin</a> e Família Arr - <a href="./vault/guias/jellyfin-arr">Docker Compose</a> <a class="header-anchor" href="#jellyfin-e-familia-arr-docker-compose" aria-label="Permalink to &quot;[Jellyfin](vault/guias/jellyfin-arr.md) e Família Arr - [Docker Compose](vault/guias/jellyfin-arr.md)&quot;">​</a></h1><p>Guia quase completo para configurar um servidor caseiro para assistir filmes e séries utilizando Docker. Neste guia, usaremos o Jellyfin e estarei utilizando o sistema operacional Ubuntu Server. Tentarei ser o mais claro possível, mas se houver algo que você não entenda, sinta-se à vontade para perguntar nos comentários. Nas configurações de cada aplicativo, recomendo seguir as configurações da megathread, pois aqui focaremos em como usar o Docker. Neste guia, utilizaremos:</p><ul><li><strong>Docker</strong>: Uma ferramenta que permite encapsular aplicações em containers, facilitando a distribuição através de um único arquivo ou comando que pode ser executado em qualquer sistema. (Usaremos o Docker Compose neste guia)</li><li><strong><a href="./vault/guias/jellyfin-arr">Prowlarr</a></strong>: Um aplicativo que roda em seu navegador e permite buscar torrents em diversos sites.</li><li><strong>Flaresolverr</strong>: Utilizado para acessar sites protegidos pelo Cloudflare.</li><li><strong><a href="./vault/guias/jellyfin-arr">Radarr</a></strong>: Aplicativo que busca filmes, coleta metadados e envia para o Prowlarr realizar o download.</li><li><strong><a href="./vault/guias/jellyfin-arr">Sonarr</a></strong>: Funciona como o Radarr, mas é focado em séries.</li><li><strong>QBitTorrent</strong>: Aplicativo usado para baixar os torrents que o Radarr e Sonarr encontram através do Prowlarr.</li><li><strong>Jellyfin</strong>: Plataforma onde iremos transmitir todos os filmes e séries baixados. Veja um exemplo de como ficará abaixo:</li></ul><p>Primeiramente, criaremos a estrutura de pastas do nosso servidor na pasta home, utilizando os seguintes comandos (remova o &quot;#&quot; e o texto após ele, que são apenas comentários explicativos):</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>$ cd ~ # Nos levará ao diretório home (pode ser criado em qualquer lugar)</span></span>
<span class="line"><span>$ mkdir media_server # Criará nossa pasta no home</span></span>
<span class="line"><span>$ cd media_server # Entrando na pasta media_server</span></span>
<span class="line"><span>$ mkdir media media/downloads media/movies media/shows # Criará nossa estrutura de arquivos (explicarei cada uma abaixo)</span></span>
<span class="line"><span>$ touch docker-compose.yml # Cria o arquivo que o Docker Compose usará</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>A estrutura de diretórios ficará assim, com comentários explicando cada parte:</p><p>├── docker-compose.yml -&gt; Arquivo usado pelo Docker Compose para rodar os aplicativos</p><p>└── media -&gt; Pasta onde salvaremos os arquivos de mídia</p><p>├── downloads -&gt; Local onde o QBitTorrent fará o download dos torrents</p><p>├── movies -&gt; Local onde o Radarr moverá os filmes após o download ser concluído pelo QBitTorrent</p><p>└── shows -&gt; Local onde o Sonarr moverá as séries após o download ser concluído pelo QBitTorrent</p><p>Antes de editar o arquivo <code>docker-compose.yml</code>, certifique-se de ter o Docker instalado na versão mais recente com os seguintes comandos:</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>$ sudo apt-get update # Atualiza nossa lista de aplicativos e verifica por atualizações</span></span>
<span class="line"><span>$ sudo apt-get upgrade # Atualiza nossos aplicativos com base na lista que atualizamos</span></span>
<span class="line"><span>$ sudo apt-get install docker # Instala o Docker, caso ainda não esteja instalado</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>Para começar a editar o arquivo, usaremos o comando <code>$ nano docker-compose.yml</code> para abrir o editor de texto nano (embora eu prefira o vim, o nano é mais amigável para iniciantes, mas sinta-se livre para usar o editor de sua preferência):</p><p>Aqui está a configuração inicial para o Jellyfin, com comentários feitos com &quot;#&quot;, que são opcionais e não serão lidos pelo Docker:</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>version: &quot;3.5&quot; # Versão do Docker Compose que usaremos</span></span>
<span class="line"><span></span></span>
<span class="line"><span>services: # Lista de aplicativos que serão usados</span></span>
<span class="line"><span>  jellyfin: # Aplicativo para assistir filmes e séries</span></span>
<span class="line"><span>    image: lscr.io/linuxserver/jellyfin:latest # Imagem do aplicativo</span></span>
<span class="line"><span>    container_name: jellyfin # Nome do container</span></span>
<span class="line"><span>    environment: # Configurações internas do aplicativo</span></span>
<span class="line"><span>      - PUID=1000</span></span>
<span class="line"><span>      - PGID=1000</span></span>
<span class="line"><span>      - TZ=INSIRA SEU FUSO HORÁRIO AQUI # Encontre seu fuso em: https://en.wikipedia.org/wiki/List_of_tz_database_time_zones</span></span>
<span class="line"><span>    volumes: # Configuração de acesso a pastas</span></span>
<span class="line"><span>      - ./jellyfin/config:/config # Pasta de configurações do Jellyfin</span></span>
<span class="line"><span>      - ./media:/media # Pasta onde a mídia será armazenada</span></span>
<span class="line"><span>    ports: # Portas de acesso</span></span>
<span class="line"><span>      - 8096:8096</span></span>
<span class="line"><span>    expose: # Para expor o Jellyfin na internet (requer configurações adicionais no roteador)</span></span>
<span class="line"><span>      - 8096:8096</span></span>
<span class="line"><span>    restart: unless-stopped # O container será reiniciado automaticamente a menos que seja parado manualmente</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><p>Recomendo ler os comentários se você não estiver familiarizado com o Docker. Se tiver dúvidas, poste nos comentários para que eu possa ajudar. A configuração dos demais aplicativos segue o mesmo padrão, então haverá menos comentários daqui para frente. Para salvar o arquivo no nano, pressione Ctrl+O e depois Enter; para sair, Ctrl+X.</p><p>Agora, vamos adicionar as configurações dos aplicativos que farão o download dos torrents (Prowlarr, QBitTorrent, Flaresolverr), lembrando de colocá-los dentro do &quot;services&quot;, no mesmo nível do &quot;Jellyfin&quot;:</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>  prowlarr:</span></span>
<span class="line"><span>    image: lscr.io/linuxserver/prowlarr:latest</span></span>
<span class="line"><span>    container_name: prowlarr</span></span>
<span class="line"><span>    environment:</span></span>
<span class="line"><span>      - PUID=1000</span></span>
<span class="line"><span>      - PGID=1000</span></span>
<span class="line"><span>      - TZ=INSIRA SEU FUSO HORÁRIO AQUI</span></span>
<span class="line"><span>    volumes:</span></span>
<span class="line"><span>      - ./prowlarr/config:/config</span></span>
<span class="line"><span>    ports:</span></span>
<span class="line"><span>      - 9696:9696</span></span>
<span class="line"><span>    restart: unless-stopped</span></span>
<span class="line"><span></span></span>
<span class="line"><span>  qbittorrent:</span></span>
<span class="line"><span>    image: lscr.io/linuxserver/qbittorrent:latest</span></span>
<span class="line"><span>    container_name: qbittorrent</span></span>
<span class="line"><span>    environment:</span></span>
<span class="line"><span>      - PUID=1000</span></span>
<span class="line"><span>      - PGID=1000</span></span>
<span class="line"><span>      - TZ=INSIRA SEU FUSO HORÁRIO AQUI</span></span>
<span class="line"><span>      - WEBUI_PORT=8080 # Porta para acessar a interface web, necessária pois o QBitTorrent será controlado via web por aplicativos como Sonarr e Radarr</span></span>
<span class="line"><span>      - TORRENTING_PORT=6881</span></span>
<span class="line"><span>    volumes:</span></span>
<span class="line"><span>      - ./qbittorrent/config:/config</span></span>
<span class="line"><span>      - ./media/downloads:/downloads</span></span>
<span class="line"><span>      - ./media/movies:/movies # Não tenho certeza se são necessários, mas recomendo manter por precaução</span></span>
<span class="line"><span>      - ./media/shows:/shows</span></span>
<span class="line"><span>    ports:</span></span>
<span class="line"><span>      - 8080:8080</span></span>
<span class="line"><span>      - 6881:6881</span></span>
<span class="line"><span>      - 6881:6881/udp</span></span>
<span class="line"><span>    restart: unless-stopped</span></span>
<span class="line"><span></span></span>
<span class="line"><span>  flaresolverr:</span></span>
<span class="line"><span>    image: ghcr.io/flaresolverr/flaresolverr:latest</span></span>
<span class="line"><span>    container_name: flaresolverr</span></span>
<span class="line"><span>    environment:</span></span>
<span class="line"><span>      - TZ=INSIRA SEU FUSO HORÁRIO AQUI</span></span>
<span class="line"><span>    ports:</span></span>
<span class="line"><span>      - 8191:8191</span></span>
<span class="line"><span>    restart: unless-stopped</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br></div></div><p>Estamos quase prontos, agora só precisamos do Radarr e do Sonarr para gerenciar os filmes e séries que queremos baixar:</p><div class="language- vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>  radarr:</span></span>
<span class="line"><span>    image: lscr.io/linuxserver/radarr:latest</span></span>
<span class="line"><span>    container_name: radarr</span></span>
<span class="line"><span>    environment:</span></span>
<span class="line"><span>      - PUID=1000</span></span>
<span class="line"><span>      - PGID=1000</span></span>
<span class="line"><span>      - TZ=INSIRA SEU FUSO HORÁRIO AQUI</span></span>
<span class="line"><span>    volumes:</span></span>
<span class="line"><span>      - ./radarr/config:/config</span></span>
<span class="line"><span>      - ./media/movies:/movies</span></span>
<span class="line"><span>      - ./media/downloads:/downloads</span></span>
<span class="line"><span>    ports:</span></span>
<span class="line"><span>      - 7878:7878</span></span>
<span class="line"><span>    restart: unless-stopped</span></span>
<span class="line"><span></span></span>
<span class="line"><span>  sonarr:</span></span>
<span class="line"><span>    image: lscr.io/linuxserver/sonarr:latest</span></span>
<span class="line"><span>    container_name: sonarr</span></span>
<span class="line"><span>    environment:</span></span>
<span class="line"><span>      - PUID=1000</span></span>
<span class="line"><span>      - PGID=1000</span></span>
<span class="line"><span>      - TZ=INSIRA SEU FUSO HORÁRIO AQUI</span></span>
<span class="line"><span>    volumes:</span></span>
<span class="line"><span>      - ./radarr/config:/config</span></span>
<span class="line"><span>      - ./media/shows:/shows</span></span>
<span class="line"><span>      - ./media/downloads:/downloads</span></span>
<span class="line"><span>    ports:</span></span>
<span class="line"><span>      - 8989:8989</span></span>
<span class="line"><span>    restart: unless-stopped</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br></div></div><p>Para iniciar os containers, execute: <code>$ sudo docker compose up -d</code></p><p>As configurações dos aplicativos devem seguir as da megathread, exceto para o Jellyfin. Aqui está um vídeo que recomendo para configurar o Jellyfin: <a href="https://www.youtube.com/watch?v=mAHGh2hBFdY&amp;t=493" target="_blank" rel="noreferrer">https://www.youtube.com/watch?v=mAHGh2hBFdY&amp;t=493</a>, começando em 7:17. Lembre-se de configurar os diretórios de filmes e séries para /movies e /shows, respectivamente, conforme configuramos.</p><p>Para descobrir seu IP privado no Linux, execute <code>$ hostname -I</code>. No Windows, execute <code>$ ipconfig</code> e procure pelo &quot;Endereço IPv4&quot; do seu adaptador.</p><p>Espero que este guia seja útil. Se houver erros (provavelmente de indentação), por favor, avise nos comentários. Não sou um especialista, faço isso porque gosto, então me perdoem por eventuais erros.</p><hr><p>Extraído de: <a href="https://old.reddit.com/r/pirataria/comments/1bclktc/guia_jellyfin_e_familia_arr_docker_compose/" target="_blank" rel="noreferrer">https://old.reddit.com/r/pirataria/comments/1bclktc/guia_jellyfin_e_familia_arr_docker_compose/</a></p><p>Backup do vídeo: <a href="https://odysee.com/mAHGh2hBFdY:eb1d0f15f287d30b9969d5b151599bceea54b145" target="_blank" rel="noreferrer">https://odysee.com/mAHGh2hBFdY:eb1d0f15f287d30b9969d5b151599bceea54b145</a></p><h2 id="🔗-veja-tambem" tabindex="-1">🔗 Veja também <a class="header-anchor" href="#🔗-veja-tambem" aria-label="Permalink to &quot;🔗 Veja também&quot;">​</a></h2><ul><li><strong><a href="/vault/video">🎥 Sites de Streaming e Ferramentas Associadas</a></strong> - Jellyfin é uma ferramenta para criar um servidor de streaming caseiro.</li></ul>`,30)])])}const b=a(r,[["render",l]]);export{d as __pageData,b as default};

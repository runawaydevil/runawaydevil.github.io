# Hospedagem Própria de FMHY

Este guia ajudará você a configurar e executar sua própria instância do FMHY localmente.

:::warning

Note que você **deve** diferenciar sua instância do site oficial (fmhy.net) para evitar confusão. As etapas para isso são fornecidas abaixo.

:::

### Docker (Experimental)

Para executar uma instância local, você precisará instalar [Docker](https://docs.docker.com/get-docker/) e [Docker Compose](https://docs.docker.com/compose/install/).

Após a instalação de ambos, execute os seguintes comandos:

```bash
git clone https://github.com/fmhy/edit.git
cd edit
sudo docker compose up --build
```

Pode levar alguns minutos para construir a imagem e iniciar o contêiner, que estará rodando na porta 4173.

### Nix Flake

Você pode usar [nix](https://nixos.org/) para configurar um ambiente de desenvolvimento, temos um [flake](https://nixos.wiki/wiki/Flakes) que configura `nodejs` e `pnpm`.

1. Faça um fork do repositório e clone para sua máquina local com `git clone https://github.com/fmhy/edit.git`.
2. Execute `nix flake update` para atualizar o arquivo de bloqueio do flake.
3. Execute `nix develop` para entrar no ambiente de desenvolvimento.
4. Faça suas alterações.
5. Saia do ambiente de desenvolvimento executando `exit`.

### Manualmente

Você precisará instalar o seguinte:
- [Git](https://git-scm.com/downloads)
- [Node.js](https://nodejs.org/en/download/) - Use a versão LTS mais recente disponível.
- [pnpm 9.12.2+](https://pnpm.io/installation)

### Passo 1: Clonar o Repositório

```bash
git clone https://github.com/fmhy/edit.git
cd edit
```

### Passo 2: Instalar Dependências

Instale as dependências do projeto usando pnpm:

```bash
pnpm install
```

### Passo 3: Modo de Desenvolvimento

Para executar o projeto no modo de desenvolvimento:

```bash
# Inicie o site de documentação no modo dev

pnpm docs:dev

# Inicie a API no modo dev (se necessário)

pnpm api:dev
```

O servidor de desenvolvimento será iniciado em `http://localhost:5173` por padrão.

### Passo 4: Construção para Produção

Você precisará atualizar:
- `meta`: Constante em `docs/.vitepress/constants.ts`
- `name`: Nome da sua instância
- `hostname`: Seu domínio
- `description`: Descrição da sua instância
- `tags`: Tags Opengraph
- `build`: Opções de construção (podem ser configuradas com [Variáveis de Ambiente](other/selfhosting.md#environment-variables))
- `docs/index.md`
- `title`
- `description`
- `hero.name`
- `hero.tagline`

Para construir o projeto para produção:

```bash
# Construa o site de documentação

pnpm docs:build

# Construa a API (se necessário) usando o preset Node.js

NITRO_PRESET=node pnpm api:build
```

### Passo 5: Visualizar Construção de Produção

Para visualizar a construção de produção localmente:

```bash
# Visualize o site de documentação

pnpm docs:preview

# Visualize a API (se necessário)

pnpm api:preview
```

### Passo 6: Deploy

Veja o [guia de deploy do VitePress](https://vitepress.dev/guide/deploy) para mais informações.

### Variáveis de Ambiente

Existem algumas variáveis que você pode alterar se desejar desativá-las:

- `FMHY_BUILD_NSFW` - Entrada NSFW na barra lateral (experimental)
- `FMHY_BUILD_API` - Componente da API para sistema de feedback.

### Solução de Problemas

1. Se você encontrar problemas com a versão do Node.js, certifique-se de estar usando Node.js 21+
2. Para problemas relacionados ao pnpm, certifique-se de estar usando pnpm 9+
3. Se encontrar problemas de construção, tente limpar o cache:
    ```bash
    # Linux
    rm -rf docs/.vitepress/cache

    # PowerShell
    rm -r -fo docs/.vitepress/cache
    ```
